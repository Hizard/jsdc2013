// Generated by CoffeeScript 1.4.0
(function() {
  var app, config, express, generalBuffer, io, messageBuffer, redis, redisClient, redisPublishClient, server;

  express = require("express");

  app = express();

  server = require("http").createServer(app);

  io = require("socket.io").listen(server);

  redis = require("redis");

  config = require('./libs/config');

  require('./libs/routes').config(app, __dirname);

  server.listen(config.port);

  messageBuffer = require('./libs/messageBuffer');

  generalBuffer = [];

  redisClient = redis.createClient(config.redis.port, config.redis.host);

  redisPublishClient = redis.createClient(config.redis.port, config.redis.host);

  io.sockets.on("connection", function(socket) {
    console.log('welcome');
    socket.on("subscribe", function(data) {
      var message, messages, _i, _len, _results;
      console.log('subscribe: ' + data.channel);
      socket.join(data.channel);
      if (data.channel === 'message') {
        messages = messageBuffer.getAll();
        _results = [];
        for (_i = 0, _len = messages.length; _i < _len; _i++) {
          message = messages[_i];
          _results.push(socket.emit('message', message));
        }
        return _results;
      } else if (generalBuffer[data.channel] != null) {
        return socket.emit('message', generalBuffer[data.channel]);
      }
    });
    return socket.on("message", function(data) {
      console.log('message: ' + data.channel);
      return redisPublishClient.publish(config.redis.channel, JSON.stringify(data));
    });
  });

  redisClient.on("ready", function() {
    return redisClient.subscribe(config.redis.channel);
  });

  redisClient.on("message", function(channel, message) {
    var data;
    data = JSON.parse(message);
    io.sockets["in"](data.channel).emit('message', data);
    if (data.channel === 'message') {
      return messageBuffer.append(data);
    } else {
      return generalBuffer[data.channel] = data;
    }
  });

}).call(this);
