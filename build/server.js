// Generated by CoffeeScript 1.4.0
(function() {
  var app, config, express, io, redis, redisClient, redisPublishClient, server, slideBuffer;

  express = require("express");

  app = express();

  server = require("http").createServer(app);

  io = require("socket.io").listen(server);

  redis = require("redis");

  config = require('./libs/config');

  require('./libs/routes').config(app, __dirname);

  server.listen(config.port);

  slideBuffer = void 0;

  redisClient = redis.createClient(config.redis.port, config.redis.host);

  redisPublishClient = redis.createClient(config.redis.port, config.redis.host);

  io.sockets.on("connection", function(socket) {
    console.log('welcome');
    socket.on("subscribe", function(data) {
      console.log('[subscribe] ' + data.channel);
      if (data.channel === 'chat') {

      } else if (data.channel === 'slide') {
        if (slideBuffer != null) {
          socket.emit(data.channel, slideBuffer);
        }
      } else {
        return;
      }
      return socket.join(data.channel);
    });
    socket.on("slide", function(data) {
      return redisPublishClient.publish(config.redis.channel, JSON.stringify({
        channel: 'slide',
        data: data
      }));
    });
    return socket.on("chat", function(data) {
      console.log('[chat] ' + data.msg);
      return redisPublishClient.publish(config.redis.channel, JSON.stringify({
        channel: 'chat',
        data: data
      }));
    });
  });

  redisClient.on("ready", function() {
    return redisClient.subscribe(config.redis.channel);
  });

  redisClient.on("message", function(channel, message) {
    var data;
    data = JSON.parse(message);
    if (!(data.channel != null)) {
      return;
    }
    if (data.channel === 'chat') {
      if (!(data.data.msg != null)) {
        return;
      }
    } else if (data.channel === 'slide') {
      if (!(data.data.id != null)) {
        return;
      }
      slideBuffer = data.data;
    }
    return io.sockets["in"](data.channel).emit(data.channel, data.data);
  });

}).call(this);
